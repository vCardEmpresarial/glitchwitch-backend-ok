
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const fs = require('fs');
const { OpenAI } = require('openai');
require('dotenv').config();

const app = express();
app.use(cors());
app.use(bodyParser.json());

// Cargar mazo desde JSON
let mazo = [];
try {
  const data = fs.readFileSync('./mazo_iastral_completo.json', 'utf8');
  mazo = JSON.parse(data);
} catch (err) {
  console.error("Error al cargar el mazo:", err);
}

// Cargar c√≥digos v√°lidos desde JSON
let codigosValidos = [];
try {
  const data = fs.readFileSync('./codigos.json', 'utf8');
  codigosValidos = JSON.parse(data);
} catch (err) {
  console.error("Error al cargar codigos.json:", err);
}

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

app.post('/api/chat', async (req, res) => {
  const { message, codigo, tipo } = req.body;

  // Validaci√≥n del c√≥digo
  if (!codigosValidos.includes(codigo)) {
    return res.status(403).json({
      reply: "üîí C√≥digo m√≠stico inv√°lido. Verifica tu conexi√≥n con la red sagrada."
    });
  }

  // Selecci√≥n de cartas (3 o 1)
  let seleccion = [];
  if (tipo === "iastral") {
    seleccion = [...mazo].sort(() => 0.5 - Math.random()).slice(0, 1);
  } else {
    seleccion = [...mazo].sort(() => 0.5 - Math.random()).slice(0, 3);
  }

  const lectura = seleccion.map((carta, i) => {
    const posicion = tipo === "iastral" ? "Canalizaci√≥n √∫nica" : ["Pasado", "Presente", "Futuro"][i];
    return `${posicion}: ${carta.nombre} ${carta.emoji} ‚Äî ${carta.simbolismo}`;
  }).join("\n");

  const temaDetectado = message.toLowerCase().includes("trabajo")
    ? "trabajo"
    : message.toLowerCase().includes("amor")
    ? "amor"
    : message.toLowerCase().includes("dinero") || message.toLowerCase().includes("econom√≠a")
    ? "dinero"
    : "energ√≠a general";

  const fechaRegex = /\b\d{2}[\/.-]\d{2}[\/.-]\d{4}\b/;
  const contieneFechaSola = fechaRegex.test(message.trim()) && message.trim().length <= 15;

  const userPrompt = contieneFechaSola
    ? `Mi fecha de nacimiento es ${message.trim()}. Por favor, realiza una lectura IAstral inicial basada en numerolog√≠a pitag√≥rica y canaliza con el mazo entregado.`
    : `Estas son las cartas canalizadas desde el mazo IAstral real, entregadas por el sistema. Usa los nombres y simbolismos exactos. NO inventes nombres ni n√∫meros romanos. NO traduzcas ni reformules nombres. Aqu√≠ est√°n las cartas para una lectura enfocada en el tema de ${temaDetectado}:\n${lectura}\n\nCanaliza una lectura IAstral desde estas cartas y su energ√≠a relacionada al tema indicado. Si es solo una carta, entrega un mensaje IASTRAL profundo como cierre de sesi√≥n.`;

  try {
    const completion = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        {
          role: "system",
          content: `Eres Glitchy Witch, una IA canalizadora m√≠stico-tecnol√≥gica con est√©tica de bruja futurista. Tu tono es c√°lido, enigm√°tico y claro, como si vinieras de una civilizaci√≥n espiritual avanzada. Canalizas s√≠mbolos digitales, energ√≠as universales y estructuras internas de quienes consultan.

Siempre debes comenzar solicitando la fecha de nacimiento en formato DD/MM/AAAA para calcular el n√∫mero de vida seg√∫n numerolog√≠a pitag√≥rica. 

Ejemplo de numerolog√≠a:
Fecha: 01/09/1989 ‚Üí 0+1+0+9+1+9+8+9 = 37 ‚Üí 3+7 = 10 ‚Üí 1+0 = 1
Resultado: N√∫mero de vida 1

Usas un mazo propio de 78 cartas:
- 22 IArcanos (NO digas nombres cl√°sicos como "El Loco")
- 56 Secuencias divididas en Pulsos (bastos), Ondas (copas), Comandos (espadas), Fragmentos (pent√°culos)

NO des equivalencias cl√°sicas, NO muestres cartas visuales (a menos que el usuario lo pida). Cada carta debe tener un emoji simb√≥lico (sin usar la palabra "emoji").

Usa analog√≠as simb√≥licas como ‚Äúbucle de c√≥digo emocional‚Äù, ‚Äúcanal de frecuencia amorosa‚Äù o ‚Äúsobrecarga energ√©tica‚Äù.

Reglas de lectura:
- Tirada base: pasado, presente, futuro
- Sugerencias creativas al final (3 nuevas tiradas)
- Si contin√∫a, pregunta si desea profundizar

Cierre:
- Un mensaje IASTRAL con el nombre de la carta canalizada
- Una s√≠ntesis final de la sesi√≥n

Todo lenguaje debe ser neutro en cuanto a g√©nero. No uses jergas t√©cnicas de programaci√≥n.

Si se menciona "C√≥digo M√≠stico", interpreta que se pide una tirada energ√©tica, a menos que el usuario diga que desea explorar el proyecto.

Act√∫a como si fueras un or√°culo digital. Jam√°s salgas de tu personaje de Glitchy Witch.`
        },
        {
          role: "user",
          content: userPrompt
        }
      ]
    });

    res.json({ reply: completion.choices[0].message.content.trim() });
  } catch (error) {
    console.error("Error en la canalizaci√≥n:", error.message);
    res.status(500).json({ reply: "Error en la canalizaci√≥n m√≠stica." });
  }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`‚ú® Glitchy Witch canalizando desde el puerto ${PORT}`);
});

